// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  username  String    @unique
  password  String
  products  Product[]
  email     String    @unique
  Images    Image[]
}

model Image {
  id          String   @id @default(uuid())
  url         String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  belongsToId String
  belongsTo   User     @relation(fields: [belongsToId], references: [id])
}

model Product {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  name        String        @db.VarChar(255)
  belongsToId String
  belongsTo   User          @relation(fields: [belongsToId], references: [id])
  updates     UpdatePoint[]
}

enum UPDATE_STATUS {
  IN_PROGRESS
  LIVE
  DEPRECATED
  ARCHIVED
}

model UpdatePoint {
  id        String        @id @default(uuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  title     String        @db.VarChar(255)
  body      String
  status    UPDATE_STATUS @default(IN_PROGRESS)
  version   String?
  asset     String
  productId String
  product   Product       @relation(fields: [productId], references: [id])

  updateId String
  update   Update @relation(fields: [updateId], references: [id])
}

model Update {
  id           String        @id @default(uuid())
  createdAt    DateTime      @default(now())
  title        String        @db.VarChar(255)
  UpdatePoints UpdatePoint[]
}
